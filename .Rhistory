e <- read.csv(con1,header = TRUE,skip = 0)
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = TRUE,skip = 1)
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = TRUE,skip = 4)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="X",by.y="CountryCode")
View(mergedData)
mergedData = merge(e,f,by.x="X",by.y="CountryCode",all=TRUE)
?merge
mergedData = merge(e,f,by.x="X",by.y="CountryCode")
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = TRUE,skip = 4)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="X",by.y="CountryCode", sort = "X")
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = TRUE,skip = 4,nrows=215)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="X",by.y="CountryCode")
mergedData = merge(e,f,by.x="X",by.y="CountryCode",all=TRUE)
mergedData = merge(e,f,by.x="X",by.y="CountryCode")
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = TRUE,skip = 4,nrows=215)
names(e)
View(e)
View(f)
mergedData = merge(e,f,by.x="X",by.y="CountryCode")
View(mergedData)
View(e)
sort(mergedData$X.4)
sort(mergedData$X.4)
View(mergedData)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 4,nrows=215)
View(e)
e <- read.csv(con1,header = FALSE,skip = 5,nrows=225)
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=225)
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=215)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=215, stringsAsFactors = False)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
sort(mergedData$V5)
mergedData$V5.value <- as.numeric(mergedData$V5.value)
mergedData$V5.value <- as.numeric(mergedData$V5.value)
mergedData$V5 <- as.numeric(mergedData$V5)
sort(mergedData$V5)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=215, stringsAsFactors = False)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(mergedData$V5)
mergedData$V5n <- as.numeric(paste(mergedData$V5))
mergedData$V5n <- as.numeric(mergedData$V5)
sort(mergedData$V5n)
?read.csv
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=215, stringsAsFactors = False)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n  <- as.numeric(mergedData$V5)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=215, stringsAsFactors = False)
names(e)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = False)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = False)
names(e)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = False)
names(e)
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n  <- as.numeric(mergedData$V5)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
on2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(paste(mergedData$V5))
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5))
sort(mergedData$V5n)
mergedData[13,V4]
mergedData[13,"V4"]
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5))
sortmergedData <- sort(mergedData$V5n)
sortmergedData[13,"V4"]
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5))
sort(mergedData$V5n)
tapply(mergedData$V5n,mergedData$Income.Group,mean)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5Rank <- as.numeric(mergedData$V5)
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5)) #vervang "," door niets, kan dat niet handiger?
sort(mergedData$V5n)
mergedData$V5Rank <- as.numeric(paste(mergedData$V5))
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5Rank <- as.numeric(mergedData$V5)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5)) #vervang "," door niets, kan dat niet handiger?
mergedData$V5Rank <- as.numeric(mergedData$V5n)
sort(mergedData$V5n)
mergedData$V5Rank <- as.numeric(as.factor(mergedData$V5n))
tapply(mergedData$V5Rank,mergedData$Income.Group,mean)
tapply(mergedData$V2,mergedData$Income.Group,mean)
#Vraag 3
con1 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
e <- read.csv(con1,header = FALSE,skip = 5,nrows=190, stringsAsFactors = FALSE)
names(e)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
f <- read.csv(con2,header = TRUE)
names(f)
mergedData = merge(e,f,by.x="V1",by.y="CountryCode")
mergedData$V5n <- as.numeric(gsub(",", "", mergedData$V5)) #vervang "," door niets, kan dat niet handiger?
sort(mergedData$V5n)
#Vraag 4
tapply(mergedData$V2,mergedData$Income.Group,mean)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
library(Hmisc)
mergedData$Groups = cut2(mergeData$V2,g=5)
mergedData$Groups = cut2(mergedData$V2,g=5)
table(mergedData$Groups)
table(mergedData$Groups,mergedData$Income.Group)
library(datasets)
data("airquality")
data(airquality)
library(datasets)
data("airquality")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = ~.Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = ~.Month)
qplot(Wind, Ozone, data = airquality, facets = . ~Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages(ggplot2movies)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
data("movies")
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
activity_file <- unzip("activitiy.zip")
outcome <- read.csv(activity_file)
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
unzip("activitiy.zip")
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
unzip("activity.zip")
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
unzip("activity.zip")
activity_file <- read.csv(activity)
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
unzip("activity.zip")
activity_file <- read.csv(activity.csv)
activity_file <- read.csv(activity.csv)
setwd("F:/CM-Groep/Cursussen/Data science/05_ReproducibleResearch/Week1/RepData_PeerAssessment1")
unzip("activity.zip")
data <- read.csv("activity.csv", colClasses = "character", na.strings="Not Available")
View(data)
tapply(data$steps,data$date.Group,mean)
tapply(data$steps,data$date,mean)
tapply(data$steps, data$date, mean, na.rm = true)
warnings()
data$steps <- as.numeric(data$steps)
tapply(data$steps, data$date, mean, na.rm = true)
tapply(data$steps, data$date, mean, na.rm=TRUE)
data$steps <- as.numeric(data$steps)
data_grouped <- tapply(data$steps, data$date, mean, na.rm=TRUE)
hist(data_grouped$steps, main="Histogram of number of steps taken per day")
hist(data$steps, main="Histogram of number of steps taken per day")
data_aggregated <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
View(data_aggregated)
hist(data_aggregated$x, main="Histogram of number of steps taken per day")
data_aggregated <- aggregate(data$steps, list(data$date), sum , na.rm=TRUE)
hist(data_aggregated$x, main="Histogram of number of steps taken per day")
# question3
data_aggregated <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
data_aggregated <- aggregate(data$steps, list(data$date), sum , na.rm=TRUE)
hist(data_aggregated$x, main="Histogram of number of steps taken per day")
hist(data_aggregated$x, main="Histogram of number of steps taken per day")
data_aggregated_sum <- aggregate(data$steps, list(data$date), sum , na.rm=TRUE)
hist(data_aggregated_sum$x, main="Histogram of number of steps taken per day")
# question3
data_aggregated_mean <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
data_aggregated_median <- aggregate(data$steps, list(data$date), fun=median , na.rm=TRUE)
View(data_aggregated_mean)
View(data_aggregated_sum)
View(data_aggregated_mean)
data_aggregated_median <- aggregate(data$steps, list(data$date), function(median)
?aggregate
?aggregate
?aggregate
data_aggregated_median <- aggregate(data$steps, list(data$date), median, na.rm=TRUE)
?aggregate
data_aggregated_median <- aggregate(data$steps, list(data$date), FUN = "median", na.rm=TRUE)
View(data_aggregated_sum)
View(data_aggregated_median)
View(data_aggregated_mean)
data_aggregated_median <- aggregate(data$steps, list(data$date), summary, na.rm=TRUE)
View(data_aggregated_median)
View(data_aggregated_mean)
View(data_aggregated_median)
data_aggregated_median <- aggregate(data$steps, list(data$date), FUN = median, na.rm=TRUE)
View(data_aggregated_median)
data_aggregated_median <- aggregate(data$steps, list(data$date), FUN = c("median"), na.rm=TRUE)
View(data_aggregated_median)
data[, list(mean = mean(data$steps),
tot = sum(data$steps),
max = max(data$steps)),
by = data$date]
library(data.table)
data[, list(mean = mean(data$steps),
tot = sum(data$steps),
max = max(data$steps)),
by = data$date]
data_aggregated_summary <- aggregate(data$steps, list(data$date), summary , na.rm=TRUE)
data_aggregated_summary
data_aggregated_mean <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
plot(data_aggregated_mean$date, data_aggregated_mean$steps, type="l")
data_aggregated_mean <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
plot(data_aggregated_mean$Group.1, data_aggregated_mean$x, type="l")
plot(as.Date(data_aggregated_mean$Group.1), data_aggregated_mean$x, type="l")
plot(as.Date(data_aggregated_mean$Group.1), data_aggregated_mean$x)
plot(as.Date(data_aggregated_mean$Group.1), data_aggregated_mean$x, type = "l")
plot(as.Date(data_aggregated_mean$Group.1), data_aggregated_mean$x, type = "l", xlab= "Date", ylab= "Mean number of steps per day", main = "titel")
data_aggregated_mean <- aggregate(data$steps, list(data$date), mean , na.rm=TRUE)
plot(as.Date(data_aggregated_mean$Group.1), data_aggregated_mean$x, type = "l", xlab= "Date", ylab= "Mean number of steps per day")
which.max(data$steps)
data$date[[which.max(data$steps)]]
data$interval[[which.max(data$steps)]]
summarise(num_obs=sum(!is.na(data$steps)))
# question6: Code to describe and show a strategy for imputing missing data
total(num_obs=sum(!is.na(data$steps)))
sum(is.na(activity))
sum(is.na(data))
summary(is.na(data))
View(data)
tapply(is.na(data$steps), data$date, FUN=sum)
# Fill with mean for that interval
data_aggregated_interval <- aggregate(data$steps, list(data$interval), mean , na.rm=TRUE)
View(data_aggregated_interval)
date <- data_aggregated_interval.Group.1
date <- data_aggregated_interval$Group.1
data_aggregated_interval$date <- data_aggregated_interval$Group.1
# question6: Code to describe and show a strategy for imputing missing data
tapply(is.na(data$steps), data$date, FUN=sum)
# Fill with mean for that interval
data_aggregated_interval <- aggregate(data$steps, list(data$interval), mean , na.rm=TRUE)
data_aggregated_interval$interval <- data_aggregated_interval$Group.1
merge(data, data_aggregated_interval, by = "interval")
imputed_data <- merge(data, data_aggregated_interval, by = "interval")
View(imputed_data)
for(i in imputed_data$interval) if(is.na(imputed_data$steps)) imputed_data$steps <- x
if(is.na(imputed_data$steps)) imputed_data$steps <- x
for(i in imputed_data$interval) if(is.na(imputed_data$steps[[i]])) imputed_data$steps <- x
for(i in imputed_data$interval) if(is.na(imputed_data[[i]]$steps)) imputed_data$steps <- x
for(i in imputed_data$interval) if(is.na(imputed_data[i,]$steps)) imputed_data$steps <- x
for(i in imputed_data$interval) if(is.na(imputed_data[i,]$steps)) imputed_data$steps <- imputed_data$x
tapply(is.na(data$steps), data$date, FUN=sum)
# Fill with mean for that interval
data_aggregated_interval <- aggregate(data$steps, list(data$interval), mean , na.rm=TRUE)
data_aggregated_interval$interval <- data_aggregated_interval$Group.1
imputed_data <- merge(data, data_aggregated_interval, by = "interval")
for(i in imputed_data$interval) if(is.na(imputed_data[i,]$steps)) imputed_data[i,]$steps <- imputed_data[i,]$x
apply(is.na(data$steps), data$date, FUN=sum)
# Fill with mean for that interval
data_aggregated_interval <- aggregate(data$steps, list(data$interval), mean , na.rm=TRUE)
data_aggregated_interval$interval <- data_aggregated_interval$Group.1
imputed_data <- merge(data, data_aggregated_interval, by = "interval")
for(i in 1:nrow(imputed_data)) if(is.na(imputed_data[i,]$steps)) imputed_data[i,]$steps <- imputed_data[i,]$x
imputed_data_sum <- aggregate(imputed_data$steps, list(imputed_data$date), sum , na.rm=TRUE)
hist(imputed_data_sum$x, main="Histogram of number of steps taken per day - imputed")
imputed_data_summary <- aggregate(imputed_data$steps, list(imputed_data$date), summary , na.rm=TRUE)
imputed_data_summary
View(imputed_data)
dow <- weekdays(imputed_data)
dow <- weekdays(imputed_data$date)
dow <- weekdays(as.Date(imputed_data$date))
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <= "week"
if(imputed_data[i,]$dow == "zondag") imputed_data$week_weekend <= "weekend"
imputed_data$week_weekend <- "week"
if(imputed_data[i,]$dow == "zondag") imputed_data$week_weekend <- "weekend"
mputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- "week"
if(imputed_da
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- "week"
if(imputed_data[i,]$dow = "zondag") imputed_data$week_weekend <- "weekend"
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- "week"
if(imputed_data[i,]$dow == "zondag") imputed_data[i,]$week_weekend <- "weekend"
if(imputed_data[i,]$dow == "zaterdag") imputed_data[i,]$week_weekend <- "weekend"
question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- "week"
if(imputed_data[i,]$dow == "zaterdag") imputed_data[i,]$week_weekend <- "weekend"
View(imputed_data)
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
weekend <- c("zaterdag","zondag")
if (imputed_data$dow[i] %in% weekend){
imputed_data$weekend[i] = "weekend"
} else {
imputed_data$weekend[i] = "week"
}
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- ""
weekend <- c("zaterdag","zondag")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- ""
weekend <- c("Saturday","Sunday")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
mputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- ""
weekend <- c("saturday","sunday")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
imputed_data$dow <- weekdays(as.Date(imputed_data$date))
imputed_data$week_weekend <- ""
weekend <- c("saturday","sunday")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$week_weekend <- ""
weekend <- c("za","zo")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
if(imputed_data[i,]$dow == "ma") imputed_data[i,]$week_weekend <- "weekend"
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$week_weekend <- ""
weekend <- c("za","zo")
if (imputed_data$dow[i] %in% weekend){
imputed_data$week_weekend[i] = "weekend"
} else {
imputed_data$week_weekend[i] = "week"
}
if(imputed_data[i,]$dow == "ma") imputed_data[i,]$week_weekend <- "weekend"
Sys.setlocale("LC_TIME","English United States")
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
Sys.setlocale("LC_TIME", "en_US")
isWeekday(as.Date(imputed_data$date), wday = 1:5)
library(timeDate)
library(chron)
imputed_data$weekend = chron::is.weekend(imputed_data$date)
imputed_data$weekday = chron::is.weekday(imputed_data$date)
?chron
imputed_data$weekday = chron::day.of.week(imputed_data$date)
imputed_data$weekday = chron::day.of.week(as.Date(imputed_data$date))
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend imputed_data$interval), mean , na.rm=TRUE)
imputed_data_weekend <- aggregate(imputed_data$steps, list("imputed_data$weekend imputed_data$interval"), mean , na.rm=TRUE)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
View(imputed_data_weekend)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
plot(imputed_data_weekend$x if imputed_data_weekend$Group.1 == FALSE,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval')
with(imputed_data_weekend$Group.1 == FALSE, plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval')
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval')
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == TRUE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekend Interval Means',xlab = 'Interval'))
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
library(chron)
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$weekend = chron::is.weekend(imputed_data$date)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == TRUE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekend Interval Means',xlab = 'Interval'))
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
library(chron)
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$weekend = chron::is.weekend(imputed_data$date)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == TRUE,], plot(imputed_data_weekend$x  ,type = "l", ylab = 'Weekend Interval Means',xlab = 'Interval'))
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
library(chron)
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$weekend = chron::is.weekend(imputed_data$date)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$x, imputed_data_weekend$Group.2 ,type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == TRUE,], plot(imputed_data_weekend$x, imputed_data_weekend$Group.2 ,type = "l", ylab = 'Weekend Interval Means',xlab = 'Interval'))
#question 8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
library(chron)
imputed_data$dow <- weekdays(as.Date(imputed_data$date),abbr = TRUE)
imputed_data$weekend = chron::is.weekend(imputed_data$date)
imputed_data_weekend <- aggregate(imputed_data$steps, list(imputed_data$weekend, imputed_data$interval), mean , na.rm=TRUE)
par(mfrow = c(1,2))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == FALSE,], plot(imputed_data_weekend$Group.2, imputed_data_weekend$x, type = "l", ylab = 'Weekday Interval Means',xlab = 'Interval'))
with(imputed_data_weekend[imputed_data_weekend$Group.1 == TRUE,],  plot(imputed_data_weekend$Group.2, imputed_data_weekend$x, type = "l", ylab = 'Weekend Interval Means',xlab = 'Interval'))
